# Copyright 2024 Khalil Estell
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Device 📦 Package 🚀 Deploy (unit)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      library:
        default: ${{ github.event.repository.name }}
        type: string
      repo:
        type: string
        default: ${{ github.repository }}
      conan_version:
        type: string
        default: "2.0.14"
      profile:
        required: true
        type: string
      profile_source:
        required: true
        type: string

jobs:
  pull:
    runs-on: ubuntu-22.04
    if: github.event.action == 'deleted'
    steps:
      - name: 📥 Install CMake 3.27.7
        run: pip3 install cmake==3.27.7

      - name: 📥 Install Conan ${{ inputs.conan_version }}
        run: pip3 install conan==${{ inputs.conan_version }}

      - name: 📡 Add `libhal` repo to conan remotes
        run: conan remote add libhal
          https://libhal.jfrog.io/artifactory/api/conan/trunk-conan

      - name: 📡 Create and setup default profile
        run: conan profile detect --force

      - name: 👁️‍🗨️ Show conan profile
        run: conan profile show

      - name: 📡 Install linux default profiles
        run: conan config install -sf profiles/x86_64/linux/ -tf profiles https://github.com/libhal/conan-config.git

      - name: 📡 Sign into JFrog Artifactory
        env:
          API_KEY: ${{ secrets.JFROG_LIBHAL_TRUNK_API_KEY }}
          JFROG_USER: ${{ secrets.JFROG_LIBHAL_TRUNK_USER }}
        run: conan remote login -p $API_KEY libhal $JFROG_USER

      - name: 🚮 Pulling package version ${{ github.ref_name }} from `libhal` repo
        run: conan remove "${{ inputs.library }}/${{ github.event.release.tag_name }}" --confirm -r=libhal
  build:
    runs-on: ubuntu-22.04
    if: github.event.action != 'deleted'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          repository: ${{ inputs.repo }}

      - name: 📥 Install CMake 3.27.7
        run: pip3 install cmake==3.27.7

      - name: 📥 Install Conan ${{ inputs.conan_version }}
        run: pip3 install conan==${{ inputs.conan_version }}

      - name: 📡 Add `libhal` repo to conan remotes
        run: conan remote add libhal
          https://libhal.jfrog.io/artifactory/api/conan/trunk-conan

      - name: 📡 Create and setup default profile
        run: conan profile detect --force

      - name: 👁️‍🗨️ Show conan profile
        run: conan profile show

      - name: 📡 Install linux default profiles
        run: conan config install -sf profiles/x86_64/linux/ -tf profiles https://github.com/libhal/conan-config.git

      - name: 📡 Sign into JFrog Artifactory
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          API_KEY: ${{ secrets.JFROG_LIBHAL_TRUNK_API_KEY }}
          JFROG_USER: ${{ secrets.JFROG_LIBHAL_TRUNK_USER }}
        run: conan remote login -p $API_KEY libhal $JFROG_USER

      - name: 📡 Install libhal settings_user.yml
        run: conan config install -sf profiles/baremetal https://github.com/libhal/conan-config.git

      - name: 📡 Install processor profiles
        run: conan config install -tf profiles -sf conan/profiles/ ${{ inputs.profile_source }}

      - name: 📦 Create `Debug` package for ${{ inputs.profile }}
        run: conan create . -pr ${{ inputs.profile }} -s build_type=Debug -b missing

      - name: 📦 Create `RelWithDebInfo` package for ${{ inputs.profile }}
        run: conan create . -pr ${{ inputs.profile }} -s build_type=RelWithDebInfo -b missing

      - name: 📦 Create `MinSizeRel` package for ${{ inputs.profile }}
        run: conan create . -pr ${{ inputs.profile }} -s build_type=MinSizeRel -b missing

      - name: 📦 Create `Release` package for ${{ inputs.profile }}
        run: conan create . -pr ${{ inputs.profile }} -s build_type=Release -b missing

      - name: 🆙 Upload package version ${{ github.ref_name }} to `libhal` repo
        if: startsWith(github.ref, 'refs/tags/')
        run: conan upload "${{ inputs.library }}/${{ github.ref_name }}" --confirm -r=libhal
